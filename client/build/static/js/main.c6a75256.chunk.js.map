{"version":3,"sources":["components/Common.js","components/Search.js","utils/API.js","components/Booklist.js","App.js","registerServiceWorker.js","index.js"],"names":["Common","props","react_default","a","createElement","Fragment","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","class","Search","for","aria-describedby","placeholder","API","searchBooks","axios","get","getBook","deleteBook","delete","saveBook","bookData","post","Booklist","state","books","title","author","synopsis","loadBooks","getBooks","then","res","_this","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","value","Object","defineProperty","handleFormSubmit","preventDefault","_this2","this","data-src","alt","src","React","Component","App","react_router_dom","components_Common","components_Search","Booklist_Booklist","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"mOAkCeA,EA/BA,SAACC,GACZ,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kDACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeC,KAAK,KAAjC,iBACAL,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBAC9KX,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAGlBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BQ,GAAG,uBAC3CZ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mBACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAWC,KAAK,KAA7B,SAAuCL,EAAAC,EAAAC,cAAA,QAAMW,MAAM,WAAZ,eAEzCb,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,WAAWC,KAAK,KAA7B,aAMRL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,+BACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAb,6CCTWU,EAhBA,SAACf,GACZ,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACRH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,yBACFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOa,IAAI,QAAX,QACAf,EAAAC,EAAAC,cAAA,SAAOI,KAAK,OAAOF,UAAU,eAAeQ,GAAG,aAAaI,mBAAiB,GAAGC,YAAY,uCAE9FjB,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASF,UAAU,mBAAhC,6ECPac,EAAA,CAEbC,YAAa,WAGX,OAAOC,IAAMC,IAAI,eAGnBC,QAAS,SAASV,GAChB,OAAOQ,IAAMC,IAAI,cAAgBT,IAGnCW,WAAY,SAASX,GACnB,OAAOQ,IAAMI,OAAO,cAAgBZ,IAGtCa,SAAU,SAASC,GACjB,OAAON,IAAMO,KAAK,aAAcD,KCjBfE,6MACjBC,MAAQ,CACJC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,SAAU,MAYlBC,UAAY,WACRhB,EAAIiB,WACHC,KAAK,SAAAC,GAAG,OAAIC,EAAKC,SAAS,CAAET,MAAOO,EAAIG,SACvCC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAI9BG,kBAAoB,SAAAC,GAAS,IAAAC,EACFD,EAAME,OAArBC,EADiBF,EACjBE,KAAMC,EADWH,EACXG,MACdZ,EAAKC,SAALY,OAAAC,EAAA,EAAAD,CAAA,GACKF,EAAOC,OAIhBG,iBAAmB,SAAAP,GACfA,EAAMQ,iBACFhB,EAAKT,MAAME,OACXb,EAAIO,SAAS,CACTM,MAAQO,EAAKT,MAAME,QAGtBK,KAAK,SAAAC,GAAG,OAAIC,EAAKJ,cACjBO,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFA/Bd,IAAAa,EAAAC,KAChBpC,IAAMC,IAAI,sIACTe,KAAK,SAAAC,GACFM,QAAQC,IAAIP,EAAIG,MAChB,IAAMV,EAAQO,EAAIG,KAClBe,EAAKhB,SAAS,CAAET,6CAgCpB,OACI9B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACYH,EAAAC,EAAAC,cAAA,WACVF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAEjBJ,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6CACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kDACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,oCAAlB,SACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,YAAYC,KAAK,KAA9B,kBAEFL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,UACAJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,qBAAb,+FACAJ,EAAAC,EAAAC,cAAA,KAAGG,KAAK,KAAR,SAEFL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6CAA6CqD,WAAS,GAAGC,IAAI,GAAIC,IAAI,iBA/D1DC,IAAMC,WCsB7BC,SAlBH,WACR,OACE9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACA/D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC8D,EAAD,MACAhE,EAAAC,EAAAC,cAAC+D,EAAD,MACAjE,EAAAC,EAAAC,cAACgE,EAAD,UCJFC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTtC,KAAK,SAAA0C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnD,QACf8C,UAAUC,cAAcO,WAK1BxC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBH,MAAM,SAAA2C,GACLzC,QAAQyC,MAAM,4CAA6CA,KC/DjEC,IAASC,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,MAASC,SAASC,eAAe,SDalC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwBtB,OAAOC,UAC3CsB,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAoB,OAAMH,GAAN,sBAENxB,EAwCX,SAAiCO,GAE/BqB,MAAMrB,GACHtC,KAAK,SAAA4D,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ7E,IAAI,gBAAgB8E,QAAQ,cAG7CxB,UAAUC,cAAcwB,MAAMhE,KAAK,SAAA0C,GACjCA,EAAauB,aAAajE,KAAK,WAC7BiC,OAAOC,SAASgC,aAKpB7B,EAAgBC,KAGnBjC,MAAM,WACLE,QAAQC,IACN,mEAzDA2D,CAAwB7B,GAHxBD,EAAgBC,MC5BxB8B","file":"static/js/main.c6a75256.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Common = (props) => {\n    return (\n      <React.Fragment>\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n  <a className=\"navbar-brand\" href=\"#\">Google Books!</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"#\">Search<span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#\">Saved</a>\n      </li>\n    </ul>\n\n  </div>\n</nav>\n<div className=\"jumbotron jumbotron-fluid\">\n  <div className=\"container\">\n    <h1 className=\"display-4\">(React) Google Books Search</h1>\n    <p className=\"lead\">Search for and Save Books of Interest</p>\n  </div>\n</div>\n</React.Fragment>\n    )\n}\n\nexport default Common;","import React from \"react\";\n\nconst Search = (props) => {\n    return (\n        <React.Fragment>\n<form>\n    <h4>Book Search</h4>\n  <div className=\"form-group\">\n    <label for=\"book\">Book</label>\n    <input type=\"text\" className=\"form-control\" id=\"searchBook\" aria-describedby=\"\" placeholder=\"Enter book name i.e. Harry Potter\"></input>\n  </div>\n  <button type=\"submit\" className=\"btn btn-primary\">Search</button>\n</form>\n        </React.Fragment>\n    )\n}\n\n\nexport default Search;","import axios from \"axios\";\n\n//https://www.googleapis.com/books/v1/volumes?q=thedeadzone&projection=lite&key=AIzaSyAJUrUxv0dPT9IcdDnohKIyOsUie15orHc\n\nexport default {\n  // Gets all books\n  searchBooks: function() {\n    let query = \"https://www.googleapis.com/books/v1/volumes?q=thedeadzone&projection=lite&key=AIzaSyAJUrUxv0dPT9IcdDnohKIyOsUie15orHc\";\n\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from \"react\";\nimport axios from \"axios\";\nimport API from \"../utils/API\";\n\nexport default class Booklist extends React.Component {\n    state = {\n        books: [],\n        title: \"\",\n        author: \"\",\n        synopsis: \"\"\n    };\n\ncomponentDidMount() {\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=thedeadzone&projection=lite&maxResults=1&key=AIzaSyAJUrUxv0dPT9IcdDnohKIyOsUie15orHc\")\n    .then(res => {\n        console.log(res.data);\n        const books = res.data;\n        this.setState({ books });\n    })\n};\n\nloadBooks = () => {\n    API.getBooks()\n    .then(res => this.setState({ books: res.data }))\n    .catch(err => console.log(err));\n};\n\n\nhandleInputChange = event => {\n    const { name, value} = event.target;\n    this.setState({\n        [name]: value\n    })\n};\n\nhandleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title) {\n        API.saveBook({\n            title:  this.state.title,\n\n        })\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n\n    }\n};\n\nrender() {\n    return (\n        <React.Fragment>\n                    <hr></hr>\n          <div className=\"container\">\n\n        <h4>Search/saved Books will show up here</h4> \n        <div className=\"row mb-2\">\n        <div className=\"col-md-12\">\n          <div className=\"card flex-md-row mb-4 box-shadow h-md-250\">\n            <div className=\"card-body d-flex flex-column align-items-start\">\n              <strong className=\"d-inline-block mb-2 text-primary\">Title</strong>\n              <h3 className=\"mb-0\">\n                <a className=\"text-dark\" href=\"#\">Featured post</a>\n              </h3>\n              <div className=\"mb-1 text-muted\">Nov 12</div>\n              <p className=\"card-text mb-auto\">This is a wider card with supporting text below as a natural lead-in to additional content.</p>\n              <a href=\"#\">View</a>\n            </div>\n            <img className=\"card-img-right flex-auto d-none d-md-block\" data-src=\"\" alt=\"\"  src=\"\" ></img>\n          </div>\n        </div>\n      </div>\n      </div>\n            {/* { this.state.books.map(book => <li>{book.title}</li>)} */}\n        </React.Fragment>\n\n    )\n}\n\n\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Common from \"./components/Common\";\r\nimport Search from \"./components/Search\";\r\nimport Display from \"./components/Display\";\r\nimport Booklist from \"./components/Booklist\"\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n    return (\r\n      <Router>\r\n      <div className=\"App\">\r\n        <Common />\r\n        <Search />\r\n        <Booklist />\r\n        {/* <Switch>\r\n          <Route exact path=\"/\" component={Display} />\r\n          <Route exact path=\"/books\" component={Display} />\r\n          <Route exact path=\"/books/:id\" component={Display} />\r\n        </Switch> */}\r\n      </div>\r\n      </Router>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import Router from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}